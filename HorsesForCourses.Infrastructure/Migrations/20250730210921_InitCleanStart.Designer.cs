// <auto-generated />
using System;
using HorsesForCourses.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HorsesForCourses.Infrastructure.Migrations
{
    [DbContext(typeof(HorsesForCoursesDbContext))]
    [Migration("20250730210921_InitCleanStart")]
    partial class InitCleanStart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("HorsesForCourses.Domain.Coach", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("_skills")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("Skills");

                    b.HasKey("Id");

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("HorsesForCourses.Domain.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CoachId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("_requiredSkills")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("RequiredSkills");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("HorsesForCourses.Domain.Timeslot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Day")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EndHour")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartHour")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Timeslots");
                });

            modelBuilder.Entity("HorsesForCourses.Domain.Course", b =>
                {
                    b.HasOne("HorsesForCourses.Domain.Coach", "Coach")
                        .WithMany("_assignedCourses")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("HorsesForCourses.Domain.Timeslot", b =>
                {
                    b.HasOne("HorsesForCourses.Domain.Course", null)
                        .WithMany("Timeslots")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HorsesForCourses.Domain.Coach", b =>
                {
                    b.Navigation("_assignedCourses");
                });

            modelBuilder.Entity("HorsesForCourses.Domain.Course", b =>
                {
                    b.Navigation("Timeslots");
                });
#pragma warning restore 612, 618
        }
    }
}
